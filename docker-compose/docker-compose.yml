services:
  conversationservice:
    image: conversationservice
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:postgresql://conversationservice-postgresql:5432/conversationService
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://conversationservice-postgresql:5432/conversationService
      - JHIPSTER_CACHE_REDIS_SERVER=redis://conversationservice-redis:6379
      - JHIPSTER_CACHE_REDIS_CLUSTER=false
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - SPRING_ELASTICSEARCH_URIS=http://conversationservice-elasticsearch:9200
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      conversationservice-postgresql:
        condition: service_healthy
      conversationservice-elasticsearch:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  conversationservice-postgresql:
    image: postgres:16.1
    environment:
      - POSTGRES_USER=conversationService
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 10
  conversationservice-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10
  conversationservice-redis:
    image: redis:7.2.3

  webapp:
    image: webapp
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:postgresql://webapp-postgresql:5432/webApp
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://webapp-postgresql:5432/webApp
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=web_app
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=web_app
      - SPRING_ELASTICSEARCH_URIS=http://webapp-elasticsearch:9200
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    ports:
      - "8081:8080"
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      webapp-postgresql:
        condition: service_healthy
      webapp-elasticsearch:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  webapp-postgresql:
    image: postgres:16.1
    environment:
      - POSTGRES_USER=webApp
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 10
  webapp-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  kafka:
    image: confluentinc/cp-kafka:7.5.2
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #ports:
      # - 9092:9092 # Uncomment to make Kafka available externally
  consul:
    image: docker.io/bitnami/consul:1.17.0
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: jhipster/consul-config-loader:v0.4.1
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    command: "start-dev --import-realm"
    volumes:
      - ./realm-config:/opt/keycloak/data/import
      - ./realm-config/keycloak-health-check.sh:/opt/keycloak/health-check.sh
    environment:
      - KC_DB=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_FEATURES=scripts
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443
      - KC_HEALTH_ENABLED=true
    ports:
      - 9080:9080
      - 9443:9443
    healthcheck:
      test: "bash /opt/keycloak/health-check.sh"
      interval: 5s
      timeout: 5s
      retries: 20
